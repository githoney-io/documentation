{"/onchain_contract":{"title":"On-chain contract","data":{"":"The Bounty on-chain contract is implemented using Aiken.We have open-sourced the Smart Contract, and to go along with it created thorough documentation.GitHub repository: https://github.com/githoney-io/githoney-smart-contract"}},"/sponsor_bounty":{"title":"Sponsor Bounty","data":{"for-sponsors-fund-a-bounty-#For Sponsors: Fund a Bounty üçØ":"Want to help a project reach its goals faster? Or show your appreciation for a particular issue? You can add extra funds to any existing bounty on Githoney!Using the fund-bounty Command\nNavigate to the GitHub issue where the bounty is attached.\nAdd a comment starting with /githoney and using the fund-bounty command.\nParameters:\ntokens: Specify the amount of ADA you want to add. (Currently, only ADA is supported. Format: tokenA=amountA)\naddress: The Cardano wallet address from which the funds will be sent.\nExample:The following command will add 500 ADA to the bounty from the specified wallet address. Currently only ADA token is accepted.\n/githoney fund-bounty --tokens ADA=500 --address addr1xxx"}},"/claim_reward":{"title":"Claim the reward","data":{"":"This guide will explain how contributors can claim their reward once the PR that\nfulfills the tasks has been approved and merged by the maintainer.","do-the-work#Do the work":"Goes without saying, the first step to claiming a bounty reward it have\nsubmitted the work that fulfills the tasks requested by the original issue.As with any open-source contribution, the maintainers will be the ones reviewing\nthe PR. Make sure that everything described in the bounty issue has been covered\nas part of the PR (eg: scope, acceptance criteria, docs, tests, etc).","flag-pull-request-as-ready#Flag pull-request as ready":"The process continues by notifying the maintainer that your code is ready for\nreview and merge. If you're PR is in draft mode, the usual procedure is to\nchange it to \"ready for review\". If you know who is responsible for the review\nprocess, you can make it explicit by requesting a review from the PR settings.Regardless of the method you use, you should understand that this is part of the\nnormal Github PR workflow and not a process managed by the GitHoney bot.","wait-for-the-merge#Wait for the merge":"Once your PR has been reviewed and merged, the bot will get notified and will\nautomatically submit a on-chain transaction to change the state of the bounty\ncontract.You will see a new comment from the bot explaining that the bounty has been\nfulfilled and that the reward can be claimed. This comment will also provide a\nlink that will take you to a simple web page that allows you to sign and submit\nthe withdrawal transaction.Make sure to sign it using the Cardano wallet that holds the \"contributor\" role\ntoken that was sent during the process of accepting the bounty. The on-chain\ncontract makes sure that only the holder of this token is allowed to withdraw\nthe reward."}},"/accept_bounty":{"title":"Claim a bounty","data":{"":"This guide will explain how contributors can accept an existing bounty by\ncreating a Github PR that references it.","start-a-pull-request#Start a pull-request":"The process starts by creating a new PR. This PR can be from a branch in the\noriginal repository or from a fork.It's recommended to start as a draft PR to make it explicit that the task hasn't\nbeen finished. It doesn't have to contain any code at this point, it can be just\nan empty branch.","accept-the-bounty#Accept the bounty":"Once you've created a PR, link it to the bounty you want to claim.You can do this by adding a comment in the PR that starts with\n/githoney and calls the accept-bounty command.Since only one contributor can be assigned to a bounty, it's crucial to do this early! This avoids the disappointment of putting in effort only to find someone else has already claimed the reward.The accept-bounty command has the following parameters:\nbountyId: the id of the contract of the bounty, which can be found as a\ncomment in by the bot in the issue that describes the task.\naddress: the Cardano wallet address that will be used to claim the reward if\n/ when the PR get approved and merged.\n** Example: **\n/githoney accept-bounty --bountyId abc111 --address addr1xxx\nFor detailed information on available commands please refer to the Bot\ncommands section of the documentation.\nThe Githoney bot will give you a thumbs-up üëç once it receives your command. It will then send a special \"contributor\" token to the Cardano wallet address you provided. This token is your key to claiming the bounty reward once your PR is merged."}},"/":{"title":"GitHoney","data":{"":"GitHoney is a bounty management system tailored for open-source software development tasks. Its foundation on on-chain smart contracts ensures transparency and strong guarantees for all participants.One of the key features of GitHoney is its integration with GitHub. It\noperates as a bot within GitHub, interacting with users through issues, PRs, and\ncomments. This bot is responsible for setting up the on-chain contracts and\nmonitoring all interactions.Roles in the Githoney Ecosystem:\nMaintainer: The individual or team responsible for a GitHub repository who has a task they want completed.\nContributor: The skilled individual or team who takes on the challenge and completes the task by submitting a pull request.\nSponsor: An individual or organization who wants to contribute additional funds to an existing bounty, boosting its attractiveness and potentially accelerating its completion.\nThe process is straightforward: a maintainer attaches a bounty to a GitHub\nissue. A contributor can then accept this bounty by starting a new PR\nreferencing the bounty. Once the PR is completed, reviewed, and merged, the\ncontributor can claim their reward.GitHoney provides a simple and transparent approach to incentivize contributions and drive your open-source projects forward.","example-interaction#Example interaction":"The following screenshot shows an interaction with GitHoney bot using\nGithub to attach a bounty to an existing issue.The following screenshot shows an interaction with GitHoney bot using\nGithub to accept the bounty.Lastly, after the PR is merged, GitHoney informs the Contributor to claim their reward."}}}